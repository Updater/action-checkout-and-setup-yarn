---
name: 'Checkout and Set Up Yarn'

description: 'Check out the repo, set up Node and Yarn with private registry support, and then install dependencies using Yarn.'

inputs:
  auth-token:
    description: 'Token for authenticating with GitHub Package Registry'
    required: true
  fetch-depth:
    description: 'Number of commits to fetch. 0 indicates all history for all branches and tags.'
    required: false
    default: 1
  github-package-registry-scope:
    description: 'Package scope to point at GitHub Package Registry. (Defaults to owner of repository where action is being used)'
    default: ''
  node-version:
    description: 'Node version to force usage of. (Defaults to value found in .tool-versions, .node-version, .nvmrc, or "16"'
    required: false
    default: ''
  token:
    description: 'GH_TOKEN to use if not using the default'
    required: false
    default: "${{ github.token }}"
  node-modules-path:
    description: 'Other paths to cache based on the yarn lockfile'
    required: false
    default: 'node_modules'
  node-modules-cache-version:
    description: 'The version of the cache to use. Mostly used if you need to cache bust'
    required: false
    default: 'v2'
  cache-node-modules:
    description: 'If node modules caching should be done'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: ${{ inputs.fetch-depth }}
        token: ${{ inputs.token }}

    - name: Cache Node Modules
      id: node-modules-cache
      if: inputs.cache-node-modules == 'true'
      uses: actions/cache@v3
      with:
        path: ${{ inputs.node-modules-path }}
        key: node-modules-${{ hashFiles('yarn.lock') }}-${{ inputs.node-modules-cache-version }}

    - name: Notify Cache Hit And No Install Done
      if: steps.node-modules-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        echo "ðŸ§¶ yarn install skipped"

    - name: Get node version
      id: node-version
      shell: bash
      run: |
        if [ "${{ inputs.node-version }}" != "" ]; then
          NODE_VERSION=${{ inputs.node-version }}
        elif [ -f .tool-versions ]; then
          NODE_VERSION=$(cat .tool-versions | grep nodejs | cut -d' ' -f2)
        elif [ -f .node-version ]; then
          NODE_VERSION=$(cat .node-version | tr -d 'v')
        elif [ -f .nvmrc ]; then
          NODE_VERSION=$(cat .nvmrc | tr -d 'v')
        else
          NODE_VERSION="16"
        fi

        echo "node-version=${NODE_VERSION}" >> $GITHUB_OUTPUT

    - uses: actions/setup-node@v2
      with:
        cache: 'yarn'
        node-version: ${{ steps.node-version.outputs.node-version }}

    - name: Get yarn cache directory path
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      id: yarn-cache-dir-path
      shell: bash
      run: |
        echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: setup .npmrc with private scope
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        AUTH_TOKEN=${{ inputs.auth-token }}
        if [ "${{ inputs.github-package-registry-scope }}" != "" ]; then
          SCOPE=${{ inputs.github-package-registry-scope }}
        else
          SCOPE=${{ github.repository_owner }}
        fi
        echo "//npm.pkg.github.com/:_authToken=${AUTH_TOKEN}" >> .npmrc
        echo "@${SCOPE}:registry=https://npm.pkg.github.com/" >> .npmrc

    - name: install dependencies
      if: steps.node-modules-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        [ "$(expr "$(yarn -v)" \< '2')" = 1 ] &&
          yarn install --frozen-lockfile --no-progress --non-interactive ||
          yarn install --immutable
